{{- if or .Values.machinePool .Values.machineDeployment }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cluster-api-aws.fullname" . }}-post
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "cluster-api-aws.fullname" . }}
    spec:
      serviceAccountName: {{ include "cluster-api-aws.serviceAccountName" . }}
      containers:
      {{- if or .Values.machinePool }}
      - name: generate-mp
        image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.job.image.pullPolicy }}
        command:
        - timeout
        - 20m
        - /generate_machine_pool.py  
        - {{ .Values.cluster.name }}
        - {{ .Release.Namespace }}
        volumeMounts:
        - name: vol
          subPath: mp.raw.yaml
          mountPath: /mp.raw.yaml
        - name: vol
          subPath: generate_machine_pool.py
          mountPath: /generate_machine_pool.py
      {{- end}}

      {{- if or .Values.machineDeployment }}
      - name: generate-md
        image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.job.image.pullPolicy }}
        command:
        - timeout
        - 20m
        - /generate_machine_deployment.py
        - {{ .Values.cluster.name }}
        - {{ .Release.Namespace }}
        volumeMounts:
        - name: vol
          subPath: md.raw.yaml
          mountPath: /md.raw.yaml
        - name: vol
          subPath: generate_machine_deployment.py
          mountPath: /generate_machine_deployment.py
      {{- end}}

      {{- if or .Values.job.taconode.enabled .Values.job.argo.enabled  }}
      - name: wait-and-initialize
        image: "{{ .Values.job.image.repository }}:{{ .Values.job.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.job.image.pullPolicy }}
        command:
        - timeout
        - 20m
        - /wait_and_k8s_init.sh
        - {{ .Values.cluster.name }}
        - taco
        - {{ .Release.Namespace }}
        - "{{ .Values.job.taconode.enabled }}"
        - "{{ .Values.job.argo.enabled }}"

        {{- if .Values.job.argo.enabled  }}
        envFrom:
        - secretRef:
            name: decapod-argocd-config
        {{- end }}
        volumeMounts:
        - name: kubeconfig
          subPath: value
          mountPath: /kube.config
        - name: vol
          subPath: node_label.py
          mountPath: /node_label.py
        - name: vol
          subPath: wait_and_k8s_init.sh
          mountPath: /wait_and_k8s_init.sh
        - name: vol
          subPath: argo-register.sh
          mountPath: /argo-register.sh
      {{- end }}

      volumes:
      - name: kubeconfig
        secret:
          secretName: {{ .Values.cluster.name }}-kubeconfig
      - name: vol
        configMap:
          name: {{ include "cluster-api-aws.fullname" . }}
          defaultMode: 0555
      restartPolicy: OnFailure
{{- end}}
