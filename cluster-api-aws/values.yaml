
# aws ssh key name
sshKeyName: default

cluster:
  name: capi-quickstart
  region: ap-northeast-2
  # networkSpec:
    # vpc:
      # id: vpc-id
      # tags:
      #  string: string
      # cidrBlock: 10.0.0.0/16 
      # availabilityZoneUsageLimit: 3 # default 3
    # list of subnets in vpc including both private and public
    # subnets: 
    # - id: subnet-0c41662a89d7878a2
    # - id: subnet-03d16e2084d9f392b
    # - id: subnet-03ad0968f68bfa639
  kubernetesVersion: v1.18.16
  podCidrBlocks:
  - 192.168.0.0/16
  bastion:
    enabled: false
    instanceType: t3.micro
    disableIngressRules: false
    allowedCIDRBlocks:
    - 0.0.0.0/0
  # baseOS is the name of the base operating system to use for image lookup the
  # AMI is not set. (default: "ubuntu-18.04")
  # Available os options: "centos-7", "ubuntu-18.04", "ubuntu-20.04", "amazon-2"
  # baseOS: ubuntu-18.04

apiVersion:
  infrastructure: infrastructure.cluster.x-k8s.io/v1alpha3
  controlplane: controlplane.cluster.x-k8s.io/v1alpha3
  bootstrap: bootstrap.cluster.x-k8s.io/v1alpha3

kubeadmControlPlane:
  enabled: true
  replicas: 3
  controlPlaneMachineType: t3.large
  rootVolume:
    size: 8
    type: gp2
  # ami:
  #   id: ami-xxxxxxxxxxxxxxxxx

machinePool: []
# you can define machinePool to use autoscaling on aws. referce the belows.
# - name: taco
#   machineType: t3.2xlarge
#   replicas: 3
#   minSize: 1
#   maxSize: 10
#   rootVolume:
#     size: 200
#     type: gp2
#   subnets: []
#   labels: []
# - name: normal  
#   machineType: t3.large
#   replicas: 1
#   minSize: 1
#   maxSize: 10
#   rootVolume:
#     size: 8
#     type: gp2
#   subnets: []
#   labels: []

#machineDeployment: []
# One MachineDeployment is created for each AZ
machineDeployment:
  - name: normal
    replicasPerAZ: 1
    selector:
      matchLabels: null
    machineType: t3.large
    rootVolume:
      size: 8
      type: gp2

job:
  image:
    repository: ghcr.io/openinfradev/python_kubectl_argo
    pullPolicy: IfNotPresent
    tag: v1.1.0
  taconode:
    enabled: false
    labels:
    - taco-lma
    - taco-ingress-gateway
    - taco-egress-gateway
    - servicemesh
  argo:
    enabled: false
    url: argocd-v2.taco-cat.xyz
    user: admin
    password: aFgSFwjtrBRwKgci

nameOverride: ""
fullnameOverride: ""

rbac:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

serviceAccount:
  create: true
